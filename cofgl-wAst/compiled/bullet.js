// Generated by CoffeeScript 1.8.0
(function() {
  var Bullet, root, step_iterations;

  step_iterations = 5;

  Bullet = (function() {
    function Bullet(spq, spp, spd) {
      var acceleration, self, v;
      this.texture = cofgl.Texture.fromImage(cofgl.resmgr.resources['space/laser'], {
        mipmaps: true,
        filtering: 'LINEAR'
      });
      this.inv = 1.0;
      acceleration = (function() {
        switch (cofgl.game.geometry.name) {
          case "euclidean":
            return 4.0;
          case "elliptic":
            return 15.0;
          case "hyperbolic":
            return 20.0;
        }
      })();
      this.q = new cofgl.Complex(spq.x, spq.y);
      this.p = new cofgl.Complex(0.0, 0.0);
      this.dir = new cofgl.Complex(spd.x, spd.y);
      v = new cofgl.Complex(this.dir.x * acceleration, this.dir.y * acceleration);
      this.p = this.p.plus(v);
      this.width = 0.01;
      this.height = 0.01;
      this.ts = 13.0;
      this.radius = 2 / this.ts;
      this.mass = 0.1;
      this.faded = false;
      self = this;
      setTimeout(function() {
        return self.faded = true;
      }, 800);
      this.cSides = [10.0, 10.0];
    }

    Bullet.prototype.update = function(dt) {
      var i, _i, _ref;
      for (i = _i = 1; 1 <= step_iterations ? _i <= step_iterations : _i >= step_iterations; i = 1 <= step_iterations ? ++_i : --_i) {
        _ref = cofgl.game.geometry.step(this.q, this.p, this.dir, dt / step_iterations, this.inv, this.cSides), this.q = _ref[0], this.p = _ref[1], this.dir = _ref[2], this.inv = _ref[3], this.cSides = _ref[4];
      }
      this.dir = this.dir.plus(this.p);
      return this.dir.normalize();
    };

    return Bullet;

  })();

  root = self.cofgl != null ? self.cofgl : self.cofgl = {};

  root.Bullet = Bullet;

}).call(this);
