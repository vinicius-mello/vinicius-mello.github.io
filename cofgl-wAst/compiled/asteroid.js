// Generated by CoffeeScript 1.8.0
(function() {
  var Asteroid, root, step_iterations;

  step_iterations = 5;

  Asteroid = (function() {
    function Asteroid(q, p, initial) {
      var ang;
      this.initial = initial;
      this.texture = cofgl.Texture.fromImage(cofgl.resmgr.resources['space/' + (this.initial ? 'asteroid1' : 'asteroid')], {
        mipmaps: true,
        filtering: 'LINEAR'
      });
      this.inv = 1.0;
      this.q = new cofgl.Complex(q.x, q.y);
      this.p = new cofgl.Complex(p.x, p.y);
      this.dir = new cofgl.Complex(1.0, 0.0);
      ang = Math.PI / 180 * 5;
      this.left = new cofgl.Complex(Math.cos(ang), Math.sin(ang));
      this.right = new cofgl.Complex(Math.cos(-ang), Math.sin(-ang));
      if (this.initial) {
        this.ts = 9.0;
        this.radius = 2 / this.ts;
        this.mass = 50;
        this.hp = 3;
      } else {
        this.ts = 15.0;
        this.radius = 2 / this.ts;
        this.mass = 20;
        this.hp = 2;
      }
      this.cSides = [10.0, 10.0];
    }

    Asteroid.prototype.update = function(dt) {
      var i, _i, _ref;
      for (i = _i = 1; 1 <= step_iterations ? _i <= step_iterations : _i >= step_iterations; i = 1 <= step_iterations ? ++_i : --_i) {
        _ref = cofgl.game.geometry.step(this.q, this.p, this.dir, dt / step_iterations, this.inv, this.cSides), this.q = _ref[0], this.p = _ref[1], this.dir = _ref[2], this.inv = _ref[3], this.cSides = _ref[4];
      }
      this.dir = this.dir.plus(this.p);
      return this.dir.normalize();
    };

    return Asteroid;

  })();

  root = self.cofgl != null ? self.cofgl : self.cofgl = {};

  root.Asteroid = Asteroid;

}).call(this);
